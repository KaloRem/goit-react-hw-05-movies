{"version":3,"file":"static/js/257.002d340b.chunk.js","mappings":"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","sources":["Api/movieAPI.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ab824cc23ddc07019a534f1fe8694f2b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async signal => {\n  const response = await axios.get('trending/movie/day', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMoviesByQuery = async (query, signal) => {\n  const response = await axios.get('search/movie', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      include_adult: false,\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n};\n\nexport const getCast = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const getReviews = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  min-width: 85px;\n  padding: 7px 10px;\n  column-gap: 5px;\n\n  border-radius: 5px;\n\n  font-size: 16px;\n  font-weight: 500;\n  color: white;\n  background-color: black;\n\n  transition: transform 350ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    color 350ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    background-color 350ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n  &:hover {\n    transform: scale(1.05);\n    color: #fde2f3;\n    background-color: red;\n  }\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  column-gap: 20px;\n  margin: 15px 0;\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n`;\n\nexport const Overview = styled.p`\n  line-height: 1.3;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Genre = styled.li`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  background-color: black;\n\n  padding: 7px 10px;\n  border-radius: 5px;\n`;\n\nexport const AdditionalInfo = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const AddInfoList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 15px;\n`;","import { Suspense, useState, useEffect, useRef } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { BsPeople, BsChatLeftText } from 'react-icons/bs';\nimport Loader from 'components/Loader/Loader';\nimport { getMovieDetails } from 'Api/movieAPI';\nimport {\n  StyledLink,\n  MovieContainer,\n  InfoContainer,\n  Overview,\n  GenresList,\n  Genre,\n  AdditionalInfo,\n  AddInfoList,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const abortCtrl = useRef();\n  const location = useLocation();\n  const backLinkHref = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    const getMovieInfo = async () => {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n\n      abortCtrl.current = new AbortController();\n\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const movieDetails = await getMovieDetails(\n          movieId,\n          abortCtrl.current.signal\n        );\n        setMovieInfo(movieDetails);\n        setError(null);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(error.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieInfo();\n  }, [movieId]);\n\n  const {\n    title,\n    release_date,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n    vote_average,\n  } = movieInfo || {};\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n\n      {!isLoading && movieInfo && (\n        <>\n          <StyledLink to={backLinkHref}>\n            <FaArrowLeft />\n            Go back\n          </StyledLink>\n          <div>\n            <MovieContainer>\n              <img\n                width=\"300px\"\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : `https://placehold.jp/300x450.png`\n                }\n                alt={original_title}\n              />\n              <InfoContainer>\n                <h1>\n                  {title} ({release_date.slice(0, 4)})\n                </h1>\n                <p>User score: {Math.floor(vote_average * 10)}%</p>\n                <h2>Overview</h2>\n                <Overview>{overview}</Overview>\n                <h2>Genres</h2>\n                <GenresList>\n                  {genres?.map(genre => (\n                    <Genre key={genre.id}>{genre.name}</Genre>\n                  ))}\n                </GenresList>\n              </InfoContainer>\n            </MovieContainer>\n            <AdditionalInfo>Additional information</AdditionalInfo>\n            <AddInfoList>\n              <li>\n                <StyledLink to=\"cast\" state={{ ...location.state }}>\n                  <BsPeople />\n                  Cast\n                </StyledLink>\n              </li>\n              <li>\n                <StyledLink to=\"reviews\" state={{ ...location.state }}>\n                  <BsChatLeftText />\n                  Reviews\n                </StyledLink>\n              </li>\n            </AddInfoList>\n          </div>\n        </>\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;"],"names":["API_KEY","axios","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","signal","response","_context","prev","next","params","api_key","language","sent","abrupt","data","results","stop","_x","apply","arguments","getMoviesByQuery","_ref2","_callee2","query","_context2","include_adult","page","_x2","_x3","getMovieDetails","_ref3","_callee3","movieId","_context3","concat","_x4","_x5","getCast","_ref4","_callee4","_context4","cast","_x6","_x7","getReviews","_ref5","_callee5","_context5","_x8","_x9","StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","MovieContainer","_templateObject2","InfoContainer","_templateObject3","Overview","_templateObject4","GenresList","_templateObject5","Genre","_templateObject6","AdditionalInfo","_templateObject7","AddInfoList","_templateObject8","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","abortCtrl","useRef","location","useLocation","backLinkHref","state","from","useEffect","getMovieInfo","movieDetails","current","abort","AbortController","t0","code","message","finish","title","release_date","overview","genres","poster_path","original_title","vote_average","_jsxs","_Fragment","children","_jsx","Loader","to","FaArrowLeft","width","src","alt","slice","Math","floor","map","genre","name","id","_objectSpread","BsPeople","BsChatLeftText","Suspense","fallback","Outlet"],"sourceRoot":""}