{"version":3,"file":"static/js/297.1302dcaa.chunk.js","mappings":"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","sources":["Api/movieAPI.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ab824cc23ddc07019a534f1fe8694f2b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async signal => {\n  const response = await axios.get('trending/movie/day', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMoviesByQuery = async (query, signal) => {\n  const response = await axios.get('search/movie', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      include_adult: false,\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n};\n\nexport const getCast = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const getReviews = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 35px;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nexport const StyledItem = styled.li`\n  background-color: black;\n  border-radius: 7px;\n  overflow: hidden;\n  width: 300px;\n\n  transition: transform 250ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.02);\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  transition: color 250ms cubic-bezier(0.65, 0.05, 0.36, 1);\n  color: white;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  object-fit: cover;\n  min-height: 450px;\n`;\n\nexport const MovieName = styled.p`\n  padding: 10px;\n  font-weight: 500;\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  StyledList,\n  StyledLink,\n  MovieName,\n  StyledItem,\n  StyledImg,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movieItems }) => {\n  const location = useLocation();\n\n  const chooseURL = id => {\n    return location.pathname === '/movies' ? `${id}` : `movies/${id}`;\n  };\n\n  return (\n    <StyledList>\n      {movieItems.map(({ poster_path, id, title }) => {\n        return (\n          <StyledItem key={id}>\n            <StyledLink to={chooseURL(id)} state={{ from: location }}>\n              <StyledImg\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : `https://placehold.jp/300x450.png`\n                }\n                alt=\"\"\n                width=\"300\"\n              />\n              <MovieName>{title}</MovieName>\n            </StyledLink>\n          </StyledItem>\n        );\n      })}\n    </StyledList>\n  );\n};\n\nMoviesList.propTypes = {\n  movieItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MoviesList;","import { Form, Field } from 'formik';\nimport styled from '@emotion/styled';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledField = styled(Field)`\n  height: 30px;\n  border: 1px solid black;\n  outline: none;\n  min-width: 220px;\n\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  font-size: 16px;\n  padding: 2px 7px;\n\n  transition: border-color 350ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n  &:focus {\n    border-color: red;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  column-gap: 5px;\n  min-width: 100px;\n  height: 36px;\n  padding: 8px 10px;\n\n  border-top-right-radius: 5px;\n  border-bottom-right-radius: 5px;\n  border: none;\n  cursor: pointer;\n\n  font-size: 16px;\n  font-weight: 600;\n  color: white;\n  background-color: black;\n\n  transition: color 350ms cubic-bezier(0.65, 0.05, 0.36, 1),\n    background-color 350ms cubic-bezier(0.65, 0.05, 0.36, 1);\n\n  &:hover {\n    background-color: red;\n  }\n`;","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { FaSearch } from 'react-icons/fa';\nimport { Formik, ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\nimport { Button, StyledField, StyledForm } from './Searchbar.styled';\n\nconst Searchbar = ({ onQueryChange }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movieName) return;\n    onQueryChange(movieName);\n  }, [movieName, onQueryChange]);\n\n  const handleSearchSubmit = (values, action) => {\n    const query = values.query;\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n\n    action.resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ query: '' }} onSubmit={handleSearchSubmit}>\n      <StyledForm>\n        <StyledField\n          type=\"text\"\n          name=\"query\"\n          title=\"Please enter movie name.\"\n          placeholder=\"Movie name\"\n          required\n        />\n        <ErrorMessage name=\"name\" component=\"div\" />\n        <Button type=\"submit\">\n          <FaSearch />\n          Search\n        </Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nSearchbar.propTypes = {\n  onQueryChange: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;","import { ToastContainer, toast } from 'react-toastify';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport { useEffect, useRef, useState } from 'react';\nimport { getMoviesByQuery } from 'Api/movieAPI';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(null);\n  const abortCtrl = useRef();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    const getMovieInfo = async () => {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n\n      abortCtrl.current = new AbortController();\n\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const movies = await getMoviesByQuery(query, abortCtrl.current.signal);\n\n        if (movies.length === 0) {\n          return toast.info('Sorry, no movies for your query...', {\n            position: toast.POSITION.TOP_RIGHT,\n          });\n        }\n\n        setMovies(movies);\n        setError(null);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(error.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieInfo();\n  }, [query]);\n\n  const onQueryChange = searchQuery => {\n    if (searchQuery === query) {\n      return;\n    }\n    setQuery(searchQuery);\n    setError(null);\n  };\n\n  return (\n    <>\n      <ToastContainer autoClose={2500} />\n      <Searchbar onQueryChange={onQueryChange} />\n\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n\n      {!isLoading && movies.length > 0 && <MoviesList movieItems={movies} />}\n    </>\n  );\n};\n\nexport default Movies;"],"names":["API_KEY","axios","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","signal","response","_context","prev","next","params","api_key","language","sent","abrupt","data","results","stop","_x","apply","arguments","getMoviesByQuery","_ref2","_callee2","query","_context2","include_adult","page","_x2","_x3","getMovieDetails","_ref3","_callee3","movieId","_context3","concat","_x4","_x5","getCast","_ref4","_callee4","_context4","cast","_x6","_x7","getReviews","_ref5","_callee5","_context5","_x8","_x9","StyledList","styled","_templateObject","_taggedTemplateLiteral","StyledItem","_templateObject2","StyledLink","Link","_templateObject3","StyledImg","_templateObject4","MovieName","_templateObject5","movieItems","location","useLocation","chooseURL","id","pathname","_jsx","children","map","poster_path","title","_jsxs","to","state","from","src","alt","width","StyledForm","Form","StyledField","Field","Button","_searchParams$get","onQueryChange","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","movieName","get","useEffect","Formik","initialValues","onSubmit","values","action","resetForm","type","name","placeholder","required","ErrorMessage","component","FaSearch","_useState","useState","_useState2","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setQuery","_useState7","_useState8","error","setError","abortCtrl","useRef","getMovieInfo","_movies","current","abort","AbortController","length","toast","position","t0","code","message","finish","_Fragment","ToastContainer","autoClose","Searchbar","searchQuery","Loader","MoviesList"],"sourceRoot":""}