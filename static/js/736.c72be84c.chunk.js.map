{"version":3,"file":"static/js/736.c72be84c.chunk.js","mappings":"mTAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAM,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACdV,EAAAA,EAAAA,IAAU,qBAAsB,CACrDM,OAAAA,EACAK,OAAQ,CACNC,QAASb,EACTc,SAAU,WAEX,KAAD,EANY,OAARN,EAAQC,EAAAM,KAAAN,EAAAO,OAAA,SAQPR,EAASS,KAAKC,SAAO,wBAAAT,EAAAU,OAAA,GAAAb,EAAA,KAC7B,gBAVuBc,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,KAYXC,EAAgB,eAAAC,GAAApB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAoB,EAAOC,EAAOnB,GAAM,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAsB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EAC3BV,EAAAA,EAAAA,IAAU,eAAgB,CAC/CM,OAAAA,EACAK,OAAQ,CACNC,QAASb,EACTc,SAAU,QACVY,MAAAA,EACAE,eAAe,EACfC,KAAM,KAEP,KAAD,EATY,OAARrB,EAAQmB,EAAAZ,KAAAY,EAAAX,OAAA,SAWPR,EAASS,KAAKC,SAAO,wBAAAS,EAAAR,OAAA,GAAAM,EAAA,KAC7B,gBAb4BK,EAAAC,GAAA,OAAAP,EAAAH,MAAA,KAAAC,UAAA,KAehBU,EAAe,eAAAC,GAAA7B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA6B,EAAOC,EAAS5B,GAAM,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAA+B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EAC5BV,EAAAA,EAAAA,IAAU,SAADoC,OAAUF,GAAW,CACnD5B,OAAAA,EACAK,OAAQ,CACNC,QAASb,EACTc,SAAU,WAEX,KAAD,EANY,OAARN,EAAQ4B,EAAArB,KAAAqB,EAAApB,OAAA,SAQPR,EAASS,MAAI,wBAAAmB,EAAAjB,OAAA,GAAAe,EAAA,KACrB,gBAV2BI,EAAAC,GAAA,OAAAN,EAAAZ,MAAA,KAAAC,UAAA,KAYfkB,EAAO,eAAAC,GAAArC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqC,EAAOP,EAAS5B,GAAM,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAsC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EACpBV,EAAAA,EAAAA,IAAU,SAADoC,OAAUF,EAAO,YAAY,CAC3D5B,OAAAA,EACAK,OAAQ,CACNC,QAASb,EACTc,SAAU,WAEX,KAAD,EANY,OAARN,EAAQmC,EAAA5B,KAAA4B,EAAA3B,OAAA,SAQPR,EAASS,KAAK2B,MAAI,wBAAAD,EAAAxB,OAAA,GAAAuB,EAAA,KAC1B,gBAVmBG,EAAAC,GAAA,OAAAL,EAAApB,MAAA,KAAAC,UAAA,KAYPyB,EAAU,eAAAC,GAAA5C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA4C,EAAOd,EAAS5B,GAAM,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAA6C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,cAAAuC,EAAAvC,KAAA,EACvBV,EAAAA,EAAAA,IAAU,SAADoC,OAAUF,EAAO,YAAY,CAC3D5B,OAAAA,EACAK,OAAQ,CACNC,QAASb,EACTc,SAAU,QACVe,KAAM,KAEP,KAAD,EAPY,OAARrB,EAAQ0C,EAAAnC,KAAAmC,EAAAlC,OAAA,SASPR,EAASS,KAAKC,SAAO,wBAAAgC,EAAA/B,OAAA,GAAA8B,EAAA,KAC7B,gBAXsBE,EAAAC,GAAA,OAAAJ,EAAA3B,MAAA,KAAAC,UAAA,I,iLCvDV+B,EAAWC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oFAOpBC,EAAWH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oHAQpBG,EAAgBL,EAAAA,EAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4BAI1BK,EAAgBP,EAAAA,EAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0E,SCsDrC,EAhEa,WACX,IAAQrB,GAAY4B,EAAAA,EAAAA,MAAZ5B,QACR6B,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BpB,EAAIsB,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BR,EAAAA,EAAAA,UAAS,MAAKS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,GAAYC,EAAAA,EAAAA,UA6BlB,OA3BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,eAAA7E,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA2E,EAAA,OAAA5E,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OASD,OARbkE,EAAUK,SACZL,EAAUK,QAAQC,QAGpBN,EAAUK,QAAU,IAAIE,gBAAkB3E,EAAAC,KAAA,EAGxC8D,GAAa,GACbI,EAAS,MAAMnE,EAAAE,KAAA,GAEQ6B,EAAAA,EAAAA,IAAQL,EAAS0C,EAAUK,QAAQ3E,QAAQ,KAAD,EAA3D0E,EAAQxE,EAAAM,KAEdqD,EAAQa,GACRL,EAAS,MAAMnE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA4E,GAAA5E,EAAA,SAEI,iBAAfA,EAAA4E,GAAMC,MACRV,EAASnE,EAAA4E,GAAME,SAChB,QAEmB,OAFnB9E,EAAAC,KAAA,GAED8D,GAAa,GAAO/D,EAAA+E,OAAA,6BAAA/E,EAAAU,OAAA,GAAAb,EAAA,yBAEvB,kBAtBgB,OAAAH,EAAAkB,MAAA,KAAAC,UAAA,KAuBjB0D,GACF,GAAG,CAAC7C,KAGFsD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGpB,IAAaqB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACpBlB,IAASiB,EAAAA,EAAAA,KAAA,KAAAD,SAAIhB,KAEdiB,EAAAA,EAAAA,KAACvC,EAAQ,CAAAsC,SACN/C,EAAKkD,KAAI,SAAAtE,GAA2D,IAAxDuE,EAAEvE,EAAFuE,GAAIC,EAAYxE,EAAZwE,aAAcC,EAAazE,EAAbyE,cAAeC,EAAI1E,EAAJ0E,KAAMC,EAAS3E,EAAT2E,UAClD,OACEV,EAAAA,EAAAA,MAAChC,EAAQ,CAAAkC,SAAA,EACPC,EAAAA,EAAAA,KAAA,OACEQ,MAAM,QACNC,IACEL,EAAY,kCAAA3D,OAC0B2D,GAAY,mCAGpDM,IAAKL,KAEPR,EAAAA,EAAAA,MAAC9B,EAAa,CAAAgC,SAAA,EACZC,EAAAA,EAAAA,KAAC/B,EAAa,CAAA8B,SAAEO,KAChBT,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,cAAYQ,UAZJJ,EAgBnB,QAIR,C","sources":["Api/movieAPI.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ab824cc23ddc07019a534f1fe8694f2b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async signal => {\n  const response = await axios.get('trending/movie/day', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMoviesByQuery = async (query, signal) => {\n  const response = await axios.get('search/movie', {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      include_adult: false,\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data;\n};\n\nexport const getCast = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/credits`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const getReviews = async (movieId, signal) => {\n  const response = await axios.get(`movie/${movieId}/reviews`, {\n    signal,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  margin-left: 25px;\n`;\n\nexport const CastItem = styled.li`\n  width: 200px;\n  color: white;\n  background-color: black;\n  border-radius: 7px;\n  overflow: hidden;\n`;\n\nexport const CharacterInfo = styled.div`\n  padding: 10px;\n`;\n\nexport const CharacterName = styled.p`\n  margin-bottom: 3px;\n  font-size: 18px;\n  font-weight: 500;\n`;","import Loader from 'components/Loader/Loader';\nimport { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'Api/movieAPI';\nimport {\n  CastList,\n  CastItem,\n  CharacterInfo,\n  CharacterName,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const abortCtrl = useRef();\n\n  useEffect(() => {\n    const getCastInfo = async () => {\n      if (abortCtrl.current) {\n        abortCtrl.current.abort();\n      }\n\n      abortCtrl.current = new AbortController();\n\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const castInfo = await getCast(movieId, abortCtrl.current.signal);\n\n        setCast(castInfo);\n        setError(null);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(error.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCastInfo();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n\n      <CastList>\n        {cast.map(({ id, profile_path, original_name, name, character }) => {\n          return (\n            <CastItem key={id}>\n              <img\n                width=\"200px\"\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : `https://placehold.jp/200x300.png`\n                }\n                alt={original_name}\n              />\n              <CharacterInfo>\n                <CharacterName>{name}</CharacterName>\n                <p>Character: {character}</p>\n              </CharacterInfo>\n            </CastItem>\n          );\n        })}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;"],"names":["API_KEY","axios","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","signal","response","_context","prev","next","params","api_key","language","sent","abrupt","data","results","stop","_x","apply","arguments","getMoviesByQuery","_ref2","_callee2","query","_context2","include_adult","page","_x2","_x3","getMovieDetails","_ref3","_callee3","movieId","_context3","concat","_x4","_x5","getCast","_ref4","_callee4","_context4","cast","_x6","_x7","getReviews","_ref5","_callee5","_context5","_x8","_x9","CastList","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","CharacterInfo","_templateObject3","CharacterName","_templateObject4","useParams","_useState","useState","_useState2","_slicedToArray","setCast","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","abortCtrl","useRef","useEffect","getCastInfo","castInfo","current","abort","AbortController","t0","code","message","finish","_jsxs","_Fragment","children","_jsx","Loader","map","id","profile_path","original_name","name","character","width","src","alt"],"sourceRoot":""}